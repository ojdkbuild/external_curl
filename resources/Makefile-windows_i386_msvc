# Copyright 2015, alex at staticlibs.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

all:
	@if exist "${CMAKE_CURRENT_BINARY_DIR}/curl" echo "flag" > "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag"
	@if exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" echo "[${CMAKE_CURRENT_BINARY_DIR}/curl] directory found, skipping build"
# copy curl sources
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" xcopy /s /i /q "${CMAKE_CURRENT_LIST_DIR}/curl" "${CMAKE_CURRENT_BINARY_DIR}/curl"
# copy zlib deps
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" echo f | xcopy /f /y "${CMAKE_CURRENT_BINARY_DIR}/external_zlib/zlib_install/include/zlib.h" "${CMAKE_CURRENT_BINARY_DIR}/curl/deps/include"
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" echo f | xcopy /f /y "${CMAKE_CURRENT_BINARY_DIR}/external_zlib/zlib_install/include/zconf.h" "${CMAKE_CURRENT_BINARY_DIR}/curl/deps/include"
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" echo f | xcopy /f /y "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libz.lib" "${CMAKE_CURRENT_BINARY_DIR}/curl/deps/lib/zlib_a.lib"
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" echo f | xcopy /f /y "${CMAKE_CURRENT_LIST_DIR}/resources/windows/tool_hugehelp.c" "${CMAKE_CURRENT_BINARY_DIR}/curl/src/tool_hugehelp.c"
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" echo f | xcopy /f /y "${CMAKE_CURRENT_LIST_DIR}/resources/windows/curlbuild-${STATICLIB_TOOLCHAIN}.h" "${CMAKE_CURRENT_BINARY_DIR}/curl/include/curl/curlbuild.h"
# copy openssl deps
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" xcopy /i /q "${CMAKE_CURRENT_BINARY_DIR}/external_openssl/openssl/include/openssl\*.h" "${CMAKE_CURRENT_BINARY_DIR}/curl/deps/include"
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" xcopy /i /q "${CMAKE_CURRENT_BINARY_DIR}/external_openssl/openssl/include/openssl\*.h" "${CMAKE_CURRENT_BINARY_DIR}/curl/deps/include/openssl"
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" echo f | xcopy /f /y "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libcrypto.lib" "${CMAKE_CURRENT_BINARY_DIR}/curl/deps/lib/libeay32.lib"
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" echo f | xcopy /f /y "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libssl.lib" "${CMAKE_CURRENT_BINARY_DIR}/curl/deps/lib/ssleay32.lib"
# run build
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" pushd "${CMAKE_CURRENT_BINARY_DIR}/curl/winbuild" & nmake /nologo /f Makefile.vc mode=static WITH_SSL=static WITH_ZLIB=static ENABLE_SSPI=no ENABLE_IPV6=yes ENABLE_IDN=no ENABLE_WINSSL=no DEBUG=${${PROJECT_NAME}_DEBUG_WINDOWS} MACHINE=${${PROJECT_NAME}_ARCH_WINDOWS} RTLIBCFG=static GEN_PDB=no WITH_DEVEL="..\deps" & popd
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/curl_exists.flag" echo f | xcopy /f /y "${CMAKE_CURRENT_BINARY_DIR}/curl/builds/libcurl-vc-${${PROJECT_NAME}_ARCH_WINDOWS}-${${PROJECT_NAME}_DEBUG_MARKER_WINDOWS}-static-ssl-static-zlib-static-ipv6/lib/${${PROJECT_NAME}_DEBUG_LIBNAME_WINDOWS}" "${CMAKE_CURRENT_BINARY_DIR}/lib/libcurl.lib"
